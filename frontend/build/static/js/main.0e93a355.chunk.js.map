{"version":3,"sources":["RegionForm.js","Nav.js","Date.js","Shop.js","About.js","SingleRegion.js","RegionSearch.js","App.js","serviceWorker.js","index.js"],"names":["RegionForm","props","state","value","handleChange","bind","event","this","setState","target","action","method","type","name","placeholder","onChange","React","Component","Nav","className","to","Date","date","Shop","About","SingleRegion","currentDate","currentData","currentPosition","position","setUpDate","console","log","deaths","prevProps","i","objLen","Object","keys","length","document","getElementById","theKey","deathPercentage","parseFloat","death_ratio","toFixed","recoverdPercentage","recovery_ratio","total_cases","recovered","critical","RegionSearch","dates","dateIndexA","dateIndexB","dataAvailable","dataA","dataB","SingleRegionaA","createRef","SingleRegionaB","query","URLSearchParams","location","search","get","callAPI","regionName","fetch","data","json","status","errorMsg","message","getDateA","getDateB","newIndex","len","id","ref","onClick","leftButtonA","rightButtonA","leftButtonB","rightButtonB","App","path","exact","component","Home","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0e93a355.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass RegionForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n\r\n    render () {\r\n        return(\r\n            \r\n            <div>\r\n            <form action=\"/regionSearch\" method=\"get\">\r\n            <input type=\"text\" value={this.state.value} name=\"region\" placeholder=\"search region...\"\r\n                onChange={this.handleChange}/>\r\n            <input type=\"submit\" value=\"Search\" />\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RegionForm;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport RegionSearch from './RegionForm';\r\nimport RegionForm from './RegionForm';\r\n\r\nfunction Nav() {    \r\n    return (\r\n        <nav>\r\n            <h3> Logo</h3>\r\n            <ul className=\"nav-links\">\r\n                <Link to=\"/about\">\r\n                    <li>About</li>\r\n                </Link>\r\n\r\n                <Link to=\"/shop\">\r\n                    <li>Shop</li>\r\n                </Link>\r\n                   \r\n                {/* <Link to=\"/region\"> */}\r\n                <RegionForm></RegionForm>\r\n                {/* </Link> */}\r\n                \r\n            </ul>\r\n        </nav>\r\n    );\r\n  }\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nclass Date extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = { apiResponse: \"\" };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <p>sup</p>\r\n            <p>{this.props.date}</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Date;","import React,{useState, useEffect} from 'react';\r\nimport Date from './Date';\r\n\r\nclass Shop extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     fetchItems();\r\n    // }, []);\r\n\r\n    // const [dates, setItems] = useState([]);\r\n    // componentDidMount() {\r\n    //     this.fetchItems()\r\n    // }\r\n\r\n    // fetchItems = async() => {\r\n    // async fetchItems(_reagion){\r\n    //     const data = await fetch('https://api.quarantine.country/api/v1/spots/region?region=Iceland');\r\n    //     const items = await data.json();\r\n    //     const dates = items.data;\r\n    //     console.log(dates);\r\n    //     let keys = Object.keys(dates);\r\n    //     //let vals = Object.values(dates);\r\n    //     let entries = Object.entries(dates);\r\n    //     let values = Object.values(dates);\r\n    //     console.log(\"this is the entries\" + entries)\r\n    //     console.log(\"this is the first entry: \" + Object.values(dates))\r\n    //     console.log(\"my ultimate value: \" + Object.values(dates[\"2020-06-03\"]));\r\n    //     this.setState({keys : keys, dates: dates, currentDate: 0})\r\n        \r\n    //     console.log(this.state.keys[0]);\r\n       \r\n    // }\r\n\r\n    // currentDate() {\r\n    //     // let curr = this.state.currentDate;\r\n    //     // console.log(curr)\r\n    //     // let currkey = this.state.keys[curr];\r\n    //     // let values = Object.values(this.state.dates[currkey])\r\n    //     // //let myval = Object.values(this.state.dates[this.state])Â°\r\n    //     if(this.state.dates  != undefined) {\r\n    //     // if (this.state.dates != undefined){\r\n    //         let onlyValues = Object.values(this.state.dates[this.state.keys[this.state.currentDate]]);\r\n    //         let myJson = this.state.dates[this.state.keys[this.state.currentDate]];\r\n    //         let retString = JSON.stringify(myJson)\r\n    //         return retString\r\n    //     }\r\n    //     return\r\n        \r\n    // }\r\n\r\n    render () {\r\n    return (\r\n        // <div>\r\n        //     <h1>Shop page</h1>\r\n            <div>\r\n                {/* {this.currentDate()} */}\r\n                {/* {this.state.keys} */}\r\n                <Date date=\"bla\"/>\r\n            </div>\r\n        // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shop;","import React, {Component} from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n        </div>\r\n    );\r\n  }\r\n\r\nexport default About;","import React from 'react';\r\n\r\nclass SingleRegion extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {currentDate: \"\", currentData: \"\", currentPosition: this.props.position}\r\n        // this.clickLeft = this.clickLeft.bind(this);\r\n    }\r\n\r\n    componentDidMount(){    \t\r\n        this.setUpDate();\r\n    }\r\n\r\n    setUpDate(){\r\n        let date = this.props.date\r\n        console.log(\"this is the single date: \" , this.props.date)\r\n        //let currentDate = Object.keys(dates)[this.props.position];\r\n        //let currentData = dates[currentDate];\r\n        \r\n        let currentDate = date.date\r\n        delete date[\"date\"];\r\n        let currentData = date\r\n        let deaths = currentData[\"deaths\"];\r\n        console.log(\"the deaths: \" + deaths)\r\n        // currentData = JSON.stringify(currentData)\r\n        this.setState({currentDate: currentDate, currentData: currentData, deaths: deaths})\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.date.date != this.props.date.date){\r\n            this.setUpDate()\r\n        }\r\n    }\r\n\r\n    constructDataBox(){\r\n        let objLen = Object.keys(this.state.currentData).length\r\n        let retValue = document.getElementById(\"dataBox\")\r\n        var i;\r\n        for (i = 0; i < objLen; i++) {\r\n            \r\n            let theKey = Object.keys(this.state.currentData)[i];\r\n            let theValue = this.state.currentData[theKey];\r\n            // var a = document.createElement(\"DIV\")\r\n            // retValue.appendChild(a);\r\n            }\r\n        let a = <div>a</div>\r\n        \r\n        return a;\r\n    }\r\n\r\nrender (){\r\n    // the loop. it'll retur n array of react node.\r\n    let deathPercentage = parseFloat(this.state.currentData.death_ratio) * 100;\r\n    deathPercentage =  deathPercentage.toFixed(3) \r\n    console.log(deathPercentage)\r\n\r\n    let recoverdPercentage = parseFloat(this.state.currentData.recovery_ratio) * 100;\r\n    recoverdPercentage =  recoverdPercentage.toFixed(3)  \r\n    console.log(recoverdPercentage)\r\n    \r\n      \r\n    \r\n    return(\r\n        <div className=\"SingleRegion\">\r\n            <h6>{this.state.currentDate}</h6>\r\n        <div className=\"dataBox\">\r\n    <div className=\"dataBoxItem\">{this.state.currentData.total_cases} <div className=\"dataType\">total cases</div></div>\r\n    <div className=\"dataBoxItem\">{this.state.currentData.deaths}<div className=\"dataType\">deaths</div> </div>\r\n    <div className=\"dataBoxItem\">{this.state.currentData.recovered} <div className=\"dataType\">recovered</div></div>\r\n    <div className=\"dataBoxItem\">{this.state.currentData.critical} <div className=\"dataType\">critical</div></div>\r\n    <div className=\"dataBoxItem\">{deathPercentage + \"%\"}<div className=\"dataType\">death ratio</div></div>\r\n    <div className=\"dataBoxItem\">{recoverdPercentage + \"%\"} <div className=\"dataType\">recovery ratio</div></div>\r\n        </div>\r\n        \r\n        </div>\r\n        );\r\n}\r\n}\r\n\r\nexport default SingleRegion;","import React from 'react';\r\nimport SingleRegion from './SingleRegion';\r\nclass RegionSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {dates: '', dateIndexA: 0, dateIndexB: 1, dataAvailable: false, dataA: \"\", dataB:\"\"};\r\n        this.SingleRegionaA = React.createRef();\r\n        this.SingleRegionaB = React.createRef();\r\n    }\r\n\r\n    componentDidMount(){\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        this.state.value = query.get(\"region\")\r\n        // console.log(\"this is the state value: \" + this.state.value)\r\n        // this.callAPI.bind(this);\r\n        \r\n        this.callAPI(this.state.value)\r\n        // function (data){\r\n            // this.setState(data);\r\n            // return;\r\n        //}\r\n        //)\r\n    }\r\n\r\n\r\n    async callAPI(regionName) {\r\n        console.log(\"this is the regionName: \" + regionName);\r\n        console.log(\"starting to fetch\");\r\n        const data = await fetch(\"/region\" + \"/\" + regionName);\r\n        console.log(\"the data: \", data);\r\n        console.log(\"this is the REGION: \" + regionName);\r\n        const dates = await data.json();\r\n        if (data.status >= 400){\r\n            this.setState({errorMsg: dates.message})\r\n            //callback(this.state.value)\r\n            return;\r\n        }\r\n        this.state.dates = dates\r\n        await this.getDateA()\r\n        await this.getDateB() \r\n        // this.state.dates = dates\r\n        // this.state.dataAvailable = true\r\n        this.setState({dataAvailable: true})\r\n        console.log(\"this is the state: \" +  this.state)\r\n        //callback({value: dates, dataAvailable: true })\r\n        return;\r\n    }\r\n\r\n    async getDateA (){\r\n        let dates = this.state.dates\r\n        let currentDate = Object.keys(dates)[this.state.dateIndexA];\r\n        let currentData = this.state.dates[currentDate];\r\n        currentData.date = currentDate\r\n        this.state.dataA = currentData\r\n        console.log(\"currentDataA: \" + currentData)\r\n        return;\r\n    }\r\n    \r\n    async getDateB (){\r\n        let dates = this.state.dates\r\n        let currentDate = Object.keys(dates)[this.state.dateIndexB];\r\n        let currentData = this.state.dates[currentDate];\r\n        currentData.date = currentDate;\r\n        this.state.dataB = currentData;\r\n        return;\r\n    }\r\n\r\n    leftButtonA(){\r\n        if (this.state.dateIndexA + 1 < this.state.dateIndexB){\r\n            this.state.dateIndexA +=1;\r\n            let newIndex = this.state.dateIndexA;\r\n            this.getDateA();\r\n            this.setState({dateIndexA: newIndex})\r\n            // console.log(\"the state inleftbutton: \" + this.state)\r\n        }\r\n        return;\r\n    }\r\n\r\n    rightButtonA(){\r\n        if(this.state.dateIndexA > 0 && this.state.dateIndexA < this.state.dateIndexB){\r\n            this.state.dateIndexA -= 1;\r\n            let newIndex = this.state.dateIndexA;\r\n            this.getDateA()\r\n            this.setState({dateIndexA: newIndex})\r\n        }\r\n        return;\r\n    }\r\n\r\n    leftButtonB(){\r\n        let len = Object.keys(this.state.dates).length;\r\n        if (this.state.dateIndexB < len){\r\n            this.state.dateIndexB += 1\r\n            let newIndex = this.state.dateIndexB;\r\n            this.getDateB() \r\n            this.setState({dateIndexB: newIndex})\r\n        }\r\n        return;\r\n    }\r\n\r\n    rightButtonB(){\r\n        if (this.state.dateIndexB -1 > this.state.dateIndexA) {\r\n            this.state.dateIndexB -=1;\r\n            let newIndex = this.state.dateIndexB;\r\n            this.getDateB();\r\n            this.setState({dateIndexB: newIndex})\r\n        }\r\n        return;\r\n    }\r\n\r\nrender (){\r\n    return(\r\n        <div>\r\n            <h1>My reagion search page</h1>\r\n            <div id=\"regionData\">\r\n                {/* {console.log(\"region: \" + this.state.value)} */}\r\n                {/* {this.state.value} */}\r\n                {this.state.dataAvailable ?\r\n\r\n                    <div className=\"RegionContainer\">\r\n                    <div className=\"mainDataInfo\">\r\n                        graphs and data go here \r\n                    </div>\r\n\r\n                    <div className=\"SingleRegionBundle\">\r\n                    <div className=\"SingleRegionContainer\">\r\n                        <SingleRegion ref={this.SingleRegionaA} date={this.state.dataA}></SingleRegion>\r\n                        {/* <SingleRegion ref={this.SingleRegionaA} dates={this.state.dates} position={this.state.dateIndexA}></SingleRegion> */}\r\n                        <button onClick={this.leftButtonA.bind(this)}>Day before</button>\r\n                        <button onClick={this.rightButtonA.bind(this)}>Day after</button>\r\n                    </div>\r\n\r\n                    <div className=\"SingleRegionContainer\">\r\n                        {/* <SingleRegion ref={this.SingleRegionaB} dates={this.state.dates} position={this.state.dateIndexB}></SingleRegion> */}\r\n                        <SingleRegion ref={this.SingleRegionaB} date={this.state.dataB}></SingleRegion>\r\n                        <button onClick={this.leftButtonB.bind(this)}>Day before</button>\r\n                        <button onClick={this.rightButtonB.bind(this)}>Day after</button>\r\n                    </div>\r\n                    </div>\r\n                </div> \r\n                : <div className=\"ErrorMsg\">{this.state.errorMsg}</div>\r\n                }\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n}\r\n\r\nexport default RegionSearch;","// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n// import Layout from './components/Layout'\r\n// import Stats from './components/Stats';\r\n// import Footer from './components/Footer';\r\n// import Header from './components/Footer';\r\n// import Navbar from './components/Navbar';\r\n// import Main from './components/Main';\r\nimport Nav from './Nav'\r\nimport Shop from './Shop'\r\nimport About from './About'\r\nimport RegionSearch from './RegionSearch'\r\n\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n//Route renders out a component based on the url\r\n// browserrouter = abiltiy to use routing\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n}\r\n\r\n\r\n  render () {\r\n    return (\r\n      <Router>\r\n      <div className=\"App\"> \r\n        <Nav />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home}></Route>\r\n          <Route path=\"/about\"  component={About}></Route>\r\n          <Route path=\"/shop\"  component={Shop}></Route>\r\n          \r\n          <Route path=\"/regionSearch\" component={RegionSearch}></Route>\r\n        </Switch>\r\n        {/* <p className=\"App-intro\">{this.state.apiResponse}</p> */}\r\n      </div>\r\n      </Router>  \r\n    );\r\n  }\r\n}\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n  </div>\r\n)\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport BrowserRouter from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}